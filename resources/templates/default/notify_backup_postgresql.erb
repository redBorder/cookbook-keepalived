#!/bin/bash

VIRTUAL_IP=<%= @virtual_ip %>
IFACE=<%= @iface %>
NAME=postgresql
CURRENT_NODE=$(hostname -s)
LOG_FILE=/tmp/rb_notify_postgresql_backup.log

# Cleaning tmp files
rm -f /tmp/postgresql.trigger
rm -f /tmp/rb_notify_postgresql*

date >> "$LOG_FILE"
echo "Executing rb_notify_backup_postgresql" >> "$LOG_FILE"

grep vrrp_sync_group /etc/keepalived/keepalived.conf | grep -q $NAME
if [ $? -ne 0 ]; then
  echo "$NAME has no virtual ip on this node" >> "$LOG_FILE"
  exit 0
fi

# If the VIP is still up, then something is wrong
found=0
sleep 5 # wait 5 seconds to converge keepalived successfully

for i in $(seq 0 2); do
  ip addr show dev $IFACE | grep "inet " | awk '{print $2}' | sed 's/\/.*//' | grep -q "^$VIRTUAL_IP$"
    if [ $? -eq 0 ]; then
      # found virtual ip address
      found=1
      break
    fi
  sleep 1
done

if [ $found -eq 1 ]; then
  echo "found virtual ip $VIRTUAL_IP, doing nothing" >> "$LOG_FILE"
  exit 0
fi

# Promoting to slave
echo "Promoting to slave $CURRENT_NODE. Sleeping for 30 seconds to update promoting serf tag from master node" >> "$LOG_FILE"
sleep 30
SERF_OUTPUT=$(serf members)
MEMBER_NAME=$(echo "$SERF_OUTPUT" | grep -oP 'promoting=\K[^,]+')

echo "Executing rb_sync_from_master.sh $MEMBER_NAME" >> "$LOG_FILE"
/usr/lib/redborder/bin/rb_sync_from_master.sh $MEMBER_NAME >> "$LOG_FILE"